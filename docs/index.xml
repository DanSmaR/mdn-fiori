<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Name Of This Project/Site on MDN Fiori</title>
    <link>https://schalkneethling.github.io/mdn-fiori/</link>
    <description>Recent content in The Name Of This Project/Site on MDN Fiori</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://schalkneethling.github.io/mdn-fiori/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>-remify function</title>
      <link>https://schalkneethling.github.io/mdn-fiori/patterns/scss/remify/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://schalkneethling.github.io/mdn-fiori/patterns/scss/remify/</guid>
      <description>The remify function converts pixel based units into rem based units. If you pass in any unit other than px, the exact same value will be returned.
@function -remify($value) { $u: unit($value); $v: 0; @if $u == &#39;px&#39; { $v: $value/$body-font-size * 1rem; } @else { $v: unit($value, u); } @return $v; }  Example font-size: -remify(16px);  This will result in the following output
font-size: 1rem;  This is currently only used internally by the set-font-size mixin.</description>
    </item>
    
    <item>
      <title>Cupper</title>
      <link>https://schalkneethling.github.io/mdn-fiori/print-version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://schalkneethling.github.io/mdn-fiori/print-version/</guid>
      <description>You don&amp;rsquo;t want to edit this file :-)</description>
    </item>
    
    <item>
      <title>Formatting</title>
      <link>https://schalkneethling.github.io/mdn-fiori/patterns/css/formatting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://schalkneethling.github.io/mdn-fiori/patterns/css/formatting/</guid>
      <description>Formatting  Use 4 spaces (no tabs) for indentation Prefer dashes over camelCasing in class names. Do not use ID selectors When using multiple selectors in a rule declarations, give each selector its own line. Put a space before the opening brace { in rule declarations In properties, put a space after, but not before, the : character. Put closing braces } of rule declarations on a new line Put blank lines between rule declarations Avoid the use of !</description>
    </item>
    
    <item>
      <title>Terminology</title>
      <link>https://schalkneethling.github.io/mdn-fiori/patterns/css/terminology/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://schalkneethling.github.io/mdn-fiori/patterns/css/terminology/</guid>
      <description>Rule Declaration A rule declaration generally consist of one or more selectors, and a list of properties. For example:
.class-name { display: block; margin: 0; }  Selector A selector matches the element(s) to which the style rules will be applied. Selectors can be any combination of a class name, a HTML attribute as well as psuedo-classes and psuedo-elements. For more details on selectors, see the W3C CSS selectors specification.</description>
    </item>
    
    <item>
      <title>Variables in SCSS</title>
      <link>https://schalkneethling.github.io/mdn-fiori/patterns/scss/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://schalkneethling.github.io/mdn-fiori/patterns/scss/variables/</guid>
      <description> All SCSS variables are defined in kuma/static/styles/includes/_vars.scss
Colours Base Colours $red #e66465  $orange #f69d3c  $yellow #f6b73c  $green #4d9f0c  $blue #3f87a6  $purple #9198e5  $grey #696969    Lighter Base Shades $red-light #ffe7e8  $orange-light #ffe8d4  $yellow-light #fff3d4  $green-light #ebf8e1  $blue-light #e4f0f5  $purple-light #d7d9f2  $grey-light #eee    Darkened Base Shades $red-dark #b65456  $orange-dark #b27229  $yellow-dark #b28529  $green-dark #3a7408  $blue-dark #29627e  $purple-dark #6f74b2  $grey-dark #4c4c4c    Dark Base Shades $red-vdark #5d3739  $orange-vdark #332206  $yellow-vdark #332807  $green-vdark #162300  $blue-vdark #001d33  $purple-vdark #303253  $grey-vdark #151515    Color in Typography $text-color #333333  $link-color #3f87a6    $bg-dark #222    Spacing  $gutter-width: 24px $content-block-margin: 24px $mobile-center-spacing: 15px  </description>
    </item>
    
    <item>
      <title>bidi - l10n utilities</title>
      <link>https://schalkneethling.github.io/mdn-fiori/patterns/scss/bidi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://schalkneethling.github.io/mdn-fiori/patterns/scss/bidi/</guid>
      <description>The bidi mixins are used to declare both the LTR and RTL values for a property together and output appropriate declarations. This makes it easier to maintain the RTL version since you only have to update values in one place.
accepts: a list of lists - each list must have 3 or 4 values
A list with three properties overrides the ltr value in rtl locales
@include bidi(((float, left, right),));  Results in:</description>
    </item>
    
    <item>
      <title>set-font-size mixin</title>
      <link>https://schalkneethling.github.io/mdn-fiori/patterns/scss/set-font-size/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://schalkneethling.github.io/mdn-fiori/patterns/scss/set-font-size/</guid>
      <description>The set-font-size mixin takes a single value. If the value&amp;rsquo;s unit of measure is pixels, it will return two versions of the font-size rule. One will use the original pixel value, and the second will be an equivalent font size using rem.
@mixin set-font-size($value) { font-size: $value; // if this is px it will be the fallback for the rem value, otherwise it will be the only declaration @if ($value !</description>
    </item>
    
  </channel>
</rss>